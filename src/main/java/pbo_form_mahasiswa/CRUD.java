package pbo_form_mahasiswa;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import pbo_pilih_project_java.Pilih_Project_Java_GUI;

public class CRUD extends javax.swing.JFrame {
    private DefaultTableModel model;

    public CRUD() {
        initComponents();
        setLocationRelativeTo(this);
        LoadDataMhs();
        Bersihkan();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        txtfieldnim = new javax.swing.JLabel();
        nim = new javax.swing.JTextField();
        txtfieldjurusan = new javax.swing.JLabel();
        nama = new javax.swing.JTextField();
        txtfieldnama = new javax.swing.JLabel();
        pilih_jurusan = new javax.swing.JComboBox();
        hapus = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Kembali = new javax.swing.JButton();
        simpan = new javax.swing.JButton();
        ubah = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("DATA MAHASISWA");

        txtfieldnim.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtfieldnim.setText("NIM        : ");

        nim.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        nim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nimActionPerformed(evt);
            }
        });

        txtfieldjurusan.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtfieldjurusan.setText("JURUSAN : ");

        nama.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        nama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaActionPerformed(evt);
            }
        });

        txtfieldnama.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtfieldnama.setText("NAMA     :");

        pilih_jurusan.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pilih_jurusan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pilih Jurusan", "Teknik Informatika", "Sistem Informasi", "Manajemen Informatika", "Bisnis Digital", "Kewirausahaan", "Rekayasa Perangkat Lunak" }));
        pilih_jurusan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pilih_jurusanActionPerformed(evt);
            }
        });

        hapus.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        hapus.setText("HAPUS");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        reset.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        reset.setText("RESET");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        Kembali.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Kembali.setText("Kembali");
        Kembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KembaliActionPerformed(evt);
            }
        });

        simpan.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        simpan.setText("SIMPAN");
        simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanActionPerformed(evt);
            }
        });

        ubah.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        ubah.setText("UBAH");
        ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubah_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtfieldnama)
                            .addComponent(txtfieldnim)
                            .addComponent(txtfieldjurusan))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(113, 113, 113)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ubah, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                                    .addComponent(reset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(112, 112, 112))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(pilih_jurusan, 0, 590, Short.MAX_VALUE)
                                    .addComponent(nama, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                                    .addComponent(nim))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(228, 228, 228))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Kembali)
                        .addGap(318, 318, 318))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nim, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfieldnim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nama, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfieldnama, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtfieldjurusan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pilih_jurusan))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ubah, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Kembali, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nimActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nimActionPerformed

    private void namaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaActionPerformed

    private void pilih_jurusanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pilih_jurusanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pilih_jurusanActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        Bersihkan();
    }//GEN-LAST:event_resetActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        int selectedRowIndex = jTable1.getSelectedRow();

        if (selectedRowIndex == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data yang akan dihapus", "Perhatian", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String selectedNIM = jTable1.getValueAt(selectedRowIndex, 0).toString();

        hapusData(selectedNIM);
    }//GEN-LAST:event_hapusActionPerformed

    private void KembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KembaliActionPerformed
        Pilih_Project_Java_GUI pilih_project = new Pilih_Project_Java_GUI();
        pilih_project.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_KembaliActionPerformed

    private void simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanActionPerformed
        ClassDB.getConnection();
        if (nama.getText().equals("") || nim.getText().equals("") || pilih_jurusan.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Data Belum Lengkap", "Perhatian", JOptionPane.WARNING_MESSAGE);
        } else if (pilih_jurusan.getSelectedItem().toString().equals("Pilih Jurusan")) {
            JOptionPane.showMessageDialog(this, "Pilih jurusan yang valid", "Perhatian", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                Connection c = ClassDB.getConnection();
                Statement st = c.createStatement();

                String sql = "INSERT INTO MHS VALUES ('" + nim.getText() + "','" + nama.getText() + "','" + pilih_jurusan.getSelectedItem().toString() + "')";

                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(this, "Data berhasil disimpan");
                LoadDataMhs();
            } catch (SQLException e) {
                throw new RuntimeException(e);
            }
        }
    }//GEN-LAST:event_simpanActionPerformed

    private void ubah_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahActionPerformed
        ubah_data();
    }//GEN-LAST:event_ubahActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CRUD().setVisible(true);
            }
        });
    }

    public void LoadDataMhs() {
        model = new DefaultTableModel();
        jTable1.setModel(model);
        model.addColumn("NIM");
        model.addColumn("NAMA");
        model.addColumn("JURUSAN");
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();

        try {
            ClassDB ClassDB = null;
            Connection c = pbo_form_mahasiswa.ClassDB.getConnection();
            Statement s = c.createStatement();
            String sql = "SELECT * FROM MHS";
            ResultSet r = s.executeQuery(sql);

            while (r.next()) {
                Object[] o = new Object[3];
                o[0] = r.getString("nim");
                o[1] = r.getString("nama");
                o[2] = r.getString("jurusan");
                model.addRow(o);
            }

            for (int i = 0; i < model.getColumnCount(); i++) {
                TableColumn column = jTable1.getColumnModel().getColumn(i);
                if (i == 0) column.setPreferredWidth(80);
                if (i == 1) column.setPreferredWidth(200);
                if (i == 2) column.setPreferredWidth(150);
            }

            r.close();
            s.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }
    }

    public void Bersihkan() {
        nim.setText("");
        nama.setText("");
        pilih_jurusan.setSelectedIndex(0);
    }

    private void hapusData(String nim) {
        try {
            Connection c = ClassDB.getConnection();
            Statement st = c.createStatement();

            String sql = "DELETE FROM MHS WHERE nim = '" + nim + "'";
            st.executeUpdate(sql);

            JOptionPane.showMessageDialog(this, "Data berhasil dihapus");
            LoadDataMhs();
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
    }

    private void ubah_data() {
        int selectedRowIndex = jTable1.getSelectedRow();

        if (selectedRowIndex == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data yang akan diubah", "Perhatian", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String selectedNIM = jTable1.getValueAt(selectedRowIndex, 0).toString();

        String newNIM = nim.getText();
        String newNama = nama.getText();
        String newJurusan = pilih_jurusan.getSelectedItem().toString();

        if (newNIM.equals("") || newNama.equals("") || newJurusan.equals("") || newJurusan.equals("Pilih Jurusan")) {
            JOptionPane.showMessageDialog(this, "Data belum lengkap atau pilih jurusan yang valid", "Perhatian", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            Connection c = ClassDB.getConnection();
            Statement st = c.createStatement();

            String sql = "UPDATE MHS SET nim='" + newNIM + "', nama='" + newNama + "', jurusan='" + newJurusan + "' WHERE nim='" + selectedNIM + "'";
            st.executeUpdate(sql);

            JOptionPane.showMessageDialog(this, "Data berhasil diubah");
            LoadDataMhs();
            Bersihkan();
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
    }


    private javax.swing.JButton Kembali;
    private javax.swing.JButton hapus;
    private javax.swing.JButton ubah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nama;
    private javax.swing.JTextField nim;
    private javax.swing.JComboBox pilih_jurusan;
    private javax.swing.JButton reset;
    private javax.swing.JButton simpan;
    private javax.swing.JLabel txtfieldjurusan;
    private javax.swing.JLabel txtfieldnama;
    private javax.swing.JLabel txtfieldnim;
}
